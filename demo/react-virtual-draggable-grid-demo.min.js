!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.default=t():e.default=t()}(window,function(){return function(w){function e(e){for(var t,r,o=e[0],i=e[1],n=e[2],a=0,_=[];a<o.length;a++)r=o[a],S[r]&&_.push(S[r][0]),S[r]=0;for(t in i)Object.prototype.hasOwnProperty.call(i,t)&&(w[t]=i[t]);for(P&&P(e);_.length;)_.shift()();return y.push.apply(y,n||[]),s()}function s(){for(var e,t=0;t<y.length;t++){for(var r=y[t],o=!0,i=1;i<r.length;i++){var n=r[i];0!==S[n]&&(o=!1)}o&&(y.splice(t--,1),e=N(N.s=r[0]))}return e}var r=window.webpackHotUpdatedefault;window.webpackHotUpdatedefault=function(e,t){!function(e,t){if(!L[e]||!c[e])return;for(var r in c[e]=!1,t)Object.prototype.hasOwnProperty.call(t,r)&&(W[r]=t[r]);0==--l&&0===d&&m()}(e,t),r&&r(e,t)};var n,o=!0,C="5100b1b6599b159c0066",t=1e4,T={},R=[],i=[];var a=[],A="idle";function B(e){A=e;for(var t=0;t<a.length;t++)a[t].call(null,e)}var _,W,U,l=0,d=0,u={},c={},L={};function k(e){return+e+""===e?+e:e}function p(e){if("idle"!==A)throw new Error("check() is only allowed in idle status");return o=e,B("check"),(n=t,n=n||1e4,new Promise(function(t,r){if("undefined"==typeof XMLHttpRequest)return r(new Error("No browser support"));try{var o=new XMLHttpRequest,i=N.p+""+C+".hot-update.json";o.open("GET",i,!0),o.timeout=n,o.send(null)}catch(e){return r(e)}o.onreadystatechange=function(){if(4===o.readyState)if(0===o.status)r(new Error("Manifest request to "+i+" timed out."));else if(404===o.status)t();else if(200!==o.status&&304!==o.status)r(new Error("Manifest request to "+i+" failed."));else{try{var e=JSON.parse(o.responseText)}catch(e){return void r(e)}t(e)}}})).then(function(e){if(!e)return B("idle"),null;c={},u={},L=e.c,U=e.h,B("prepare");var t=new Promise(function(e,t){_={resolve:e,reject:t}});for(var r in W={},S)f(r);return"prepare"===A&&0===d&&0===l&&m(),t});var n}function f(e){var t,r,o;L[e]?(c[e]=!0,l++,t=e,r=document.getElementsByTagName("head")[0],(o=document.createElement("script")).charset="utf-8",o.src=N.p+""+t+"."+C+".hot-update.js",r.appendChild(o)):u[e]=!0}function m(){B("ready");var t=_;if(_=null,t)if(o)Promise.resolve().then(function(){return h(o)}).then(function(e){t.resolve(e)},function(e){t.reject(e)});else{var e=[];for(var r in W)Object.prototype.hasOwnProperty.call(W,r)&&e.push(k(r));t.resolve(e)}}function h(r){if("ready"!==A)throw new Error("apply() is only allowed in ready status");var e,t,o,d,i;function n(e){for(var t=[e],r={},o=t.slice().map(function(e){return{chain:[e],id:e}});0<o.length;){var i=o.pop(),n=i.id,a=i.chain;if((d=K[n])&&!d.hot._selfAccepted){if(d.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:n};if(d.hot._main)return{type:"unaccepted",chain:a,moduleId:n};for(var _=0;_<d.parents.length;_++){var s=d.parents[_],l=K[s];if(l){if(l.hot._declinedDependencies[n])return{type:"declined",chain:a.concat([s]),moduleId:n,parentId:s};-1===t.indexOf(s)&&(l.hot._acceptedDependencies[n]?(r[s]||(r[s]=[]),u(r[s],[n])):(delete r[s],t.push(s),o.push({chain:a.concat([s]),id:s})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:r}}function u(e,t){for(var r=0;r<t.length;r++){var o=t[r];-1===e.indexOf(o)&&e.push(o)}}r=r||{};var a={},_=[],s={},l=function(){console.warn("[HMR] unexpected require("+p.moduleId+") to disposed module")};for(var c in W)if(Object.prototype.hasOwnProperty.call(W,c)){var p;i=k(c);var f=!1,m=!1,h=!1,y="";switch((p=W[c]?n(i):{type:"disposed",moduleId:c}).chain&&(y="\nUpdate propagation: "+p.chain.join(" -> ")),p.type){case"self-declined":r.onDeclined&&r.onDeclined(p),r.ignoreDeclined||(f=new Error("Aborted because of self decline: "+p.moduleId+y));break;case"declined":r.onDeclined&&r.onDeclined(p),r.ignoreDeclined||(f=new Error("Aborted because of declined dependency: "+p.moduleId+" in "+p.parentId+y));break;case"unaccepted":r.onUnaccepted&&r.onUnaccepted(p),r.ignoreUnaccepted||(f=new Error("Aborted because "+i+" is not accepted"+y));break;case"accepted":r.onAccepted&&r.onAccepted(p),m=!0;break;case"disposed":r.onDisposed&&r.onDisposed(p),h=!0;break;default:throw new Error("Unexception type "+p.type)}if(f)return B("abort"),Promise.reject(f);if(m)for(i in s[i]=W[i],u(_,p.outdatedModules),p.outdatedDependencies)Object.prototype.hasOwnProperty.call(p.outdatedDependencies,i)&&(a[i]||(a[i]=[]),u(a[i],p.outdatedDependencies[i]));h&&(u(_,[p.moduleId]),s[i]=l)}var E,g=[];for(t=0;t<_.length;t++)i=_[t],K[i]&&K[i].hot._selfAccepted&&g.push({module:i,errorHandler:K[i].hot._selfAccepted});B("dispose"),Object.keys(L).forEach(function(e){!1===L[e]&&delete S[e]});for(var b,P,O=_.slice();0<O.length;)if(i=O.pop(),d=K[i]){var D={},M=d.hot._disposeHandlers;for(o=0;o<M.length;o++)(e=M[o])(D);for(T[i]=D,d.hot.active=!1,delete K[i],delete a[i],o=0;o<d.children.length;o++){var v=K[d.children[o]];v&&(0<=(E=v.parents.indexOf(i))&&v.parents.splice(E,1))}}for(i in a)if(Object.prototype.hasOwnProperty.call(a,i)&&(d=K[i]))for(P=a[i],o=0;o<P.length;o++)b=P[o],0<=(E=d.children.indexOf(b))&&d.children.splice(E,1);for(i in B("apply"),C=U,s)Object.prototype.hasOwnProperty.call(s,i)&&(w[i]=s[i]);var x=null;for(i in a)if(Object.prototype.hasOwnProperty.call(a,i)&&(d=K[i])){P=a[i];var I=[];for(t=0;t<P.length;t++)if(b=P[t],e=d.hot._acceptedDependencies[b]){if(-1!==I.indexOf(e))continue;I.push(e)}for(t=0;t<I.length;t++){e=I[t];try{e(P)}catch(e){r.onErrored&&r.onErrored({type:"accept-errored",moduleId:i,dependencyId:P[t],error:e}),r.ignoreErrored||x||(x=e)}}}for(t=0;t<g.length;t++){var j=g[t];i=j.module,R=[i];try{N(i)}catch(t){if("function"==typeof j.errorHandler)try{j.errorHandler(t)}catch(e){r.onErrored&&r.onErrored({type:"self-accept-error-handler-errored",moduleId:i,error:e,originalError:t}),r.ignoreErrored||x||(x=e),x||(x=t)}else r.onErrored&&r.onErrored({type:"self-accept-errored",moduleId:i,error:t}),r.ignoreErrored||x||(x=t)}}return x?(B("fail"),Promise.reject(x)):(B("idle"),new Promise(function(e){e(_)}))}var K={},S={0:0},y=[];function N(e){if(K[e])return K[e].exports;var t,o,r=K[e]={i:e,l:!1,exports:{},hot:(t=e,o={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:n!==t,active:!0,accept:function(e,t){if(void 0===e)o._selfAccepted=!0;else if("function"==typeof e)o._selfAccepted=e;else if("object"==typeof e)for(var r=0;r<e.length;r++)o._acceptedDependencies[e[r]]=t||function(){};else o._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)o._selfDeclined=!0;else if("object"==typeof e)for(var t=0;t<e.length;t++)o._declinedDependencies[e[t]]=!0;else o._declinedDependencies[e]=!0},dispose:function(e){o._disposeHandlers.push(e)},addDisposeHandler:function(e){o._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=o._disposeHandlers.indexOf(e);0<=t&&o._disposeHandlers.splice(t,1)},check:p,apply:h,status:function(e){if(!e)return A;a.push(e)},addStatusHandler:function(e){a.push(e)},removeStatusHandler:function(e){var t=a.indexOf(e);0<=t&&a.splice(t,1)},data:T[t]},n=void 0,o),parents:(i=R,R=[],i),children:[]};return w[e].call(r.exports,r,r.exports,function(t){var r=K[t];if(!r)return N;var o=function(e){return r.hot.active?(K[e]?-1===K[e].parents.indexOf(t)&&K[e].parents.push(t):(R=[t],n=e),-1===r.children.indexOf(e)&&r.children.push(e)):(console.warn("[HMR] unexpected require("+e+") from disposed module "+t),R=[]),N(e)},e=function(t){return{configurable:!0,enumerable:!0,get:function(){return N[t]},set:function(e){N[t]=e}}};for(var i in N)Object.prototype.hasOwnProperty.call(N,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(o,i,e(i));return o.e=function(e){return"ready"===A&&B("prepare"),d++,N.e(e).then(t,function(e){throw t(),e});function t(){d--,"prepare"===A&&(u[e]||f(e),0===d&&0===l&&m())}},o.t=function(e,t){return 1&t&&(e=o(e)),N.t(e,-2&t)},o}(e)),r.l=!0,r.exports}N.m=w,N.c=K,N.d=function(e,t,r){N.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},N.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},N.t=function(t,e){if(1&e&&(t=N(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(N.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)N.d(r,o,function(e){return t[e]}.bind(null,o));return r},N.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return N.d(t,"a",t),t},N.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},N.p="",N.h=function(){return C};var E=window.webpackJsonpdefault=window.webpackJsonpdefault||[],g=E.push.bind(E);E.push=e,E=E.slice();for(var b=0;b<E.length;b++)e(E[b]);var P=g;return y.push([0,1]),s()}({"../src/Functions/changeOrder.js":function(e,a,_){"use strict";(function(e){var t,b=_("../src/Functions/updatePositions.js");function P(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){var t=e.order,r=e.keys,o=e.fixedRows,i=e.fixedColumns,n=e.fixedWidthAll,a=e.fixedHeightAll,_=e.gutterX,s=e.gutterY,l=e.fromIndexX,d=e.fromIndexY,u=e.toIndexX,c=e.toIndexY,p=P(t),f=p[d]&&P(p[d]);if((p[d]=f)&&f[l]){var m=function(i){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},t=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.forEach(function(e){var t,r,o;t=i,o=n[r=e],r in t?Object.defineProperty(t,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[r]=o})}return i}({},f[l]);1===f.length?p.splice(d,1):f.splice(l,1);var h=p[c];if(h){var y=P(h);y.splice(u,0,m),p[c]=y}else{p[p.length]=[m]}var E=u<=l?u:l,g=c<=d?c:d;return Object(b.a)({order:p,keys:r,fixedRows:o,fixedColumns:i,fixedWidthAll:n,fixedHeightAll:a,orderX:E,orderY:g,gutterX:_,gutterY:s})}return null},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"changeOrder","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/changeOrder.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/changeOrder.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/findMaxHeight.js":function(e,a,_){"use strict";(function(e){var t;(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){var t=e.order,r=e.indexY,o=-1,i=t[r];return i&&i.forEach(function(e){var t=e.height;o<t&&(o=t)}),o},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"findMaxHeight","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/findMaxHeight.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/findMaxHeight.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/findMaxPosition.js":function(e,a,_){"use strict";(function(e){var t;(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){var t=e.order,n=e.fixedWidthAll,a=e.fixedHeightAll,_=e.gutterX,r=e.gutterY,s=-1,l=-1;return a&&(l=t.length*(a+r)-r),t.forEach(function(e){var t=e.length;if(n){var r=t*(n+_)-_;s<r&&(s=r)}else{var o=e[t-1],i=o.left+o.width;s<i&&(s=i)}a||e.forEach(function(e){var t=e.top+e.height;l<t&&(l=t)})}),{maxRight:s,maxBottom:l}},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"findMaxPosition","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/findMaxPosition.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/findMaxPosition.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/findMaxWidth.js":function(e,a,_){"use strict";(function(e){var t;(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){var t=e.order,o=e.indexX,i=-1;return t.forEach(function(e){var t=e[o];if(t){var r=t.width;i<r&&(i=r)}}),i},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"findMaxWidth","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/findMaxWidth.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/findMaxWidth.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/getMouseIndex.js":function(e,a,_){"use strict";(function(e){var t;(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){var f=e.order,t=e.visibleOrder,m=e.mouseX,h=e.mouseY,y=-1,E=-1,g=f.length;return t.some(function(e){var t=e.left,r=e.top,o=e.width,i=e.height,n=e.orderX,a=e.orderY,_=f[a].length,s=m+o/2,l=h+i/3,d=t+o,u=.1*o,c=r+i,p=.1*i;if(t+u<=s&&s<d-u?y=n:0===n&&s<0?y=0:n===_-1&&d<=s&&(y=_),-1<y){if(r+p<=l&&l<c-p)return E=a,!0;if(0===a&&l<=0)return!(E=0);if(a===g-1&&c<=l)return E=g,!0}return!1}),{toIndexX:y,toIndexY:E}},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"getMouseIndex","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/getMouseIndex.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/getMouseIndex.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/getPositionLeft.js":function(e,a,_){"use strict";(function(e){var t;(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function e(t){var r=t.order,o=t.orderX,i=t.orderY,n=t.gutterX;if(0===o)return 0;var a=-1,_=r[i];if(_&&_[o]){var s=_[o-1],l=s?s.width:0;a=e({order:r,orderX:o-1,orderY:i,gutterX:n})+l+n}return a},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"getPositionLeft","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/getPositionLeft.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/getPositionLeft.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/getPositionTop.js":function(e,a,_){"use strict";(function(e){var t;(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function e(t){var r=t.order,o=t.orderX,i=t.orderY,n=t.gutterY,a=t.leftBound,_=t.rightBound;if(0===i)return 0;var s=-1,l=r[i]&&r[i][o],d=r[i-1];if(d&&(l||a&&_)){var u=a||l.left,c=_||u+l.width;if(d.forEach(function(e){var t=e.left,r=t+e.width;if(u<=t&&t<c||u<r&&r<=c||t<=u&&c<=r){var o=e.top+e.height;s<o&&(s=o+n)}}),-1===s){var p=e({order:r,orderX:o,orderY:i-1,gutterY:n,leftBound:u,rightBound:c});s=-1<p?p:0}}return s},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"getPositionTop","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/getPositionTop.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/getPositionTop.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/handleOrder.js":function(e,_,s){"use strict";(function(e){var t,f=s("../src/Functions/findMaxHeight.js"),o=s("../src/Functions/findMaxWidth.js"),m=s("../src/Functions/handleOrderObject.js"),h=s("../src/Functions/getPositionLeft.js"),y=s("../src/Functions/getPositionTop.js");(t=s("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,i,n=function(e){var t=e.items,n=e.fixedRows,a=e.fixedColumns,_=e.fixedWidthAll,s=e.fixedHeightAll,l=e.gutterX,d=e.gutterY,u=[],c={},p=null,r=[];return a&&!_&&(r[0]=0),n&&!s&&(p=0),t.forEach(function(e,o){if(n&&!s&&0<o&&(p+=Object(f.a)({order:u,indexY:o-1})+d),e&&Array.isArray(e)){var i=[];u.push(i),e.forEach(function(e,t){var r=Object(m.a)({item:e,indexX:t,indexY:o,fixedWidthAll:_,fixedHeightAll:s});r&&(i.push(r),c[e.key]=r,a&&_?r.left=t*(_+l):a&&!_||(r.left=Object(h.a)({order:u,orderX:t,orderY:o,gutterX:l})),r.top=n&&s?o*(s+d):"number"==typeof p?p:Object(y.a)({order:u,orderX:t,orderY:o,gutterX:l,gutterY:d}))})}else{var t=Object(m.a)({item:e,indexX:0,indexY:o,fixedWidthAll:_,fixedHeightAll:s});t&&(u.push([t]),(c[e.key]=t).left=0,t.top=n&&s?o*(s+d):"number"==typeof p?p:Object(y.a)({order:u,keys:c,orderX:0,orderY:o,gutterX:l,gutterY:d}))}}),a&&!_&&u.forEach(function(e){e.forEach(function(e,t){"number"!=typeof r[t]&&(r[t]=r[t-1]+Object(o.a)({order:u,indexX:t-1})+l),e.left=r[t]})}),{order:u,keys:c}},a=n;_.a=a,r=s("./node_modules/react-hot-loader/index.js").default,i=s("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(n,"handleOrder","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/handleOrder.js"),r.register(a,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/handleOrder.js"),i(e))}).call(this,s("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/handleOrderObject.js":function(e,a,_){"use strict";(function(e){var t;function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){var t=e.item,r=e.indexX,o=e.indexY,i=e.fixedWidthAll,n=e.fixedHeightAll,a=null;if(t&&"object"===d(t)&&"function"==typeof t.ItemComponent&&"string"==typeof t.key&&"number"==typeof t.fixedWidth&&"number"==typeof t.fixedHeight){var _=t.key,s=t.fixedWidth,l=t.fixedHeight;a={key:_,itemX:r,itemY:o,orderX:r,orderY:o,width:i||s,height:n||l}}return a},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"handleOrderObject","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/handleOrderObject.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/handleOrderObject.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/handleVirtualization.js":function(e,a,_){"use strict";(function(e){var t;(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){var t=e.order,r=e.scrollLeft,o=e.scrollTop,i=e.containerWidth,n=e.containerHeight,a=e.leeway,_=e.scrollBufferX,s=e.scrollBufferY,l=[],d=0<r?r:0,u=0<o?o:0,c=d+(0<i?i:0),p=u+(0<n?n:0);if(0<c&&0<p)for(var f=d-i*a-_,m=u-n*a-s,h=c+i*a+_,y=p+n*a+s,E=!0,g=0;g<t.length&&E;g+=1)for(var b=t[g],P=!0,O=0;O<b.length&&P;O+=1){var D=b[O],M=D.left,v=D.top,x=M+D.width,I=v+D.height;f<=M&&m<=v&&x<=h&&I<=y?l.push(D):h<x?P=!1:!E&&y<I&&(E=!1)}return l},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"handleVirtualization","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/handleVirtualization.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/handleVirtualization.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/testItemsUpdate.js":function(e,a,_){"use strict";(function(e){var t;function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){var t=e.items,r=e.order,s=e.keys,l=e.fixedWidthAll,d=e.fixedHeightAll;if(!r||!s)return!0;var o=Object.keys(s).length,u=0,i=t.some(function(e,_){if(e&&Array.isArray(e))return e.some(function(e,t){if(e&&"object"===c(e)&&"function"==typeof e.ItemComponent&&"string"==typeof e.key&&"number"==typeof e.fixedWidth&&"number"==typeof e.fixedHeight){var r=s[e.key];if(!r)return!0;var o=r.itemX,i=r.itemY,n=r.width,a=r.height;if(o!==t||i!==_)return!0;if(n!==e.fixedWidth&&n!==l||a!==e.fixedHeight&&a!==d)return!0;u+=1}return!1});if(e&&e.key){var t=s[e.key];if(!t)return!0;var r=t.itemX,o=t.itemY;if(0!==r||o!==_)return!0;u+=1}return!1});return!i&&u!==o||i},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"testItemsUpdate","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/testItemsUpdate.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/testItemsUpdate.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Functions/updatePositions.js":function(e,_,s){"use strict";(function(e){var t,O=s("../src/Functions/findMaxHeight.js"),D=s("../src/Functions/findMaxWidth.js"),M=s("../src/Functions/getPositionLeft.js"),v=s("../src/Functions/getPositionTop.js");function x(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(e){i(t,e,r[e])})}return t}function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function I(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}(t=s("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,n=function(e){var t=e.order,r=e.keys,o=e.fixedRows,i=e.fixedColumns,n=e.fixedWidthAll,a=e.fixedHeightAll,_=e.orderX,s=e.orderY,l=e.gutterX,d=e.gutterY,u=I(t),c=x({},r),p=o?0:0<s?s-1:0,f=i?0:_,m=null,h=[];i&&!n&&(h[0]=0),o&&!a&&(m=0);for(var y=p;y<u.length;y+=1){var E=I(u[y]),g=y===p?f:0;u[y]=E,o&&!a&&0<y&&(m+=Object(O.a)({order:u,indexY:y-1})+d);for(var b=g;b<E.length;b+=1){var P=x({},E[b]);i&&!n&&"number"!=typeof h[b]&&(h[b]=h[b-1]+Object(D.a)({order:u,indexX:b-1})+l),(c[(E[b]=P).key]=P).orderX=b,P.orderY=y,i&&n?P.left=b*(n+l):"number"==typeof h[b]?P.left=h[b]:P.left=Object(M.a)({order:u,orderX:b,orderY:y,gutterX:l}),P.top=o&&a?y*(a+d):"number"==typeof m?m:Object(v.a)({order:u,orderX:b,orderY:y,gutterX:l,gutterY:d})}}return{order:u,keys:c}},a=n;_.a=a,r=s("./node_modules/react-hot-loader/index.js").default,o=s("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(n,"updatePositions","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/updatePositions.js"),r.register(a,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Functions/updatePositions.js"),o(e))}).call(this,s("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/Grid.jsx":function(module,__webpack_exports__,__webpack_require__){"use strict";(function(module){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__),_GridItem__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../src/GridItem.jsx"),_Functions_handleVirtualization__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../src/Functions/handleVirtualization.js"),_Functions_getMouseIndex__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../src/Functions/getMouseIndex.js"),_Functions_changeOrder__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../src/Functions/changeOrder.js"),_Functions_findMaxPosition__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../src/Functions/findMaxPosition.js"),_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../src/Utilities/preventDrag.js"),_jsxFileName="/home/tyler/Projects/react-virtual-draggable-grid/src/Grid.jsx",dk;function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _possibleConstructorReturn(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?_assertThisInitialized(e):t}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}dk=__webpack_require__("./node_modules/react-hot-loader/index.js").enterModule,dk&&dk(module);var Grid=function(_React$Component){function Grid(e){var O;return _classCallCheck(this,Grid),_defineProperty(_assertThisInitialized(_assertThisInitialized(O=_possibleConstructorReturn(this,_getPrototypeOf(Grid).call(this,e)))),"handleUpdate",function(){var e=O.props,o=e.items,t=e.order,r=e.keys,i=e.leeway,n=e.scrollBufferX,a=e.scrollBufferY,_=e.getVisibleItems,s=O.state,l=s.containerWidth,d=s.containerHeight,u=s.scrollLeft,c=s.scrollTop,p=Object(_Functions_handleVirtualization__WEBPACK_IMPORTED_MODULE_3__.a)({order:t,keys:r,containerWidth:l,containerHeight:d,scrollLeft:u,scrollTop:c,leeway:i,scrollBufferX:n,scrollBufferY:a});"function"==typeof _&&o&&0<o.length&&p&&0<p.length&&_(p.map(function(e){var t=e.itemX,r=e.itemY;return Array.isArray(o[r])?o[r][t]:o[r]}));O.setState({visibleOrder:p})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"handleMouseDown",function(e){var t=O.props,r=t.onlyDragElements,o=t.onlyDragIds,i=t.noDragElements,n=t.noDragIds,a=null,_=e.target,s=_.nodeName.toLowerCase(),l=_.id,d=r.length,u=o.length;if(0<d&&-1<r.indexOf(s)||0<u&&-1===o.indexOf(l)||0===d&&0===u&&-1===i.indexOf(s)&&-1===n.indexOf(l))for(var c=0;!a&&c<=20;)_&&("rvdl-grid-item"===_.className?a=_:_=_.parentElement),c+=1;if(a){var p=e.pageX,f=e.pageY,m=a,h=m.id,y=m.dataset,E=y.x,g=y.y,b=parseFloat(E),P=parseFloat(g);O.setState({isPressed:!0,pressedItemKey:h,leftDeltaX:p-b,topDeltaY:f-P,mouseX:b,mouseY:P})}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"handleTouchStart",function(e){return e.preventDefault(),O.handleMouseDown(e.changedTouches[0]),!1}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"updateOrder",function(e){var t=e.pressedItemKey,r=e.mouseX,o=e.mouseY,i=O.props.keys,n=i[t];if(n){var a=O.props.order,_=O.state.visibleOrder,s=n.orderX,l=n.orderY,d=Object(_Functions_getMouseIndex__WEBPACK_IMPORTED_MODULE_4__.a)({order:a,visibleOrder:_,mouseX:r,mouseY:o}),u=d.toIndexX,c=d.toIndexY;if(-1<u&&-1<c&&(u!==s||c!==l)){var p=O.props,f=p.fixedRows,m=p.fixedColumns,h=p.fixedWidthAll,y=p.fixedHeightAll,E=p.gutterX,g=p.gutterY,b=Object(_Functions_changeOrder__WEBPACK_IMPORTED_MODULE_5__.a)({order:a,keys:i,fixedRows:f,fixedColumns:m,fixedWidthAll:h,fixedHeightAll:y,gutterX:E,gutterY:g,fromIndexX:s,fromIndexY:l,toIndexX:u,toIndexY:c});b&&(O.props.updateOrderKeys(b),O.handleUpdate())}}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"handleMouseMove",function(e){var t=O.state,r=t.isPressed,o=t.pressedItemKey;if(r&&o){var i=O.props,n=i.mouseUpdateTime,a=i.mouseUpdateX,_=i.mouseUpdateY,s=O.state,l=s.leftDeltaX,d=s.topDeltaY,u=e.pageX-l,c=e.pageY-d,p=new Date;O.setState({mouseX:u,mouseY:c}),!O.updatingOrder&&p-O.updateTime>n&&(Math.abs(u-O.prevMouseX)>a||Math.abs(c-O.prevMouseY)>_)&&(O.updatingOrder=!0,O.updateOrder({pressedItemKey:o,mouseX:u,mouseY:c}),O.updateTime=new Date,O.prevMouseX=u,O.prevMouseY=c,O.updatingOrder=!1)}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"handleTouchMove",function(e){return!O.state.isPressed||(e.preventDefault(),O.handleMouseMove(e.changedTouches[0]),!1)}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"handleMouseUp",function(){if(O.state.isPressed){var e=O.state.pressedItemKey;O.setState({isPressed:!1,leftDeltaX:0,topDeltaY:0,prevPressedItemKey:e}),O.props.updateItems()}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"handleTouchEnd",function(e){return!O.state.isPressed||(e.preventDefault(),O.handleMouseUp(),!1)}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"handleScroll",function(e){if(e&&e.target){var t=e.target,r=t.scrollLeft,o=t.scrollTop,i=O.props,n=i.scrollUpdateX,a=i.scrollUpdateY,_=O.state,s=_.prevScrollLeft,l=_.prevScrollTop,d={};-1<r&&O.state.scrollLeft!==r&&(d.scrollLeft=r),-1<o&&O.state.scrollTop!==o&&(d.scrollTop=o),Math.abs(r-s)>n&&(d.prevScrollLeft=r),Math.abs(o-l)>a&&(d.prevScrollTop=o),0<Object.keys(d).length&&O.setState(_objectSpread({},d))}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"updateGridSize",function(){if(O.gridRef&&O.gridRef.current){var e=O.state,t=e.containerWidth,r=e.containerHeight,o=O.gridRef.current,i=o.offsetWidth,n=o.offsetHeight,a={};i&&t!==i&&(a.containerWidth=i),n&&r!==n&&(a.containerHeight=n),0<Object.keys(a).length&&O.setState(_objectSpread({},a))}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"handleStyle",function(e){var t=e.styles,r=e.orderObject,o=O.props,i=o.items,n=o.itemsBool,a=O.state,_=a.pressedItemKey,s=a.prevPressedItemKey,l=a.mouseX,d=a.mouseY,u=r.key,c=r.itemX,p=r.itemY,f=r.left,m=r.top,h=r.width,y=r.height,E=Array.isArray(i[p])?i[p][c]:i[p];if(E){var g=O.state.isPressed&&u===_,b=u===s;t.push({key:"key-".concat(u),data:{item:E,itemsBool:n},style:_objectSpread({isPressed:g,wasPressed:b,width:h,height:y},g?{x:l,y:d}:{x:f,y:m})})}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"generateStyles",function(){var e=O.props.keys,t=O.state,r=t.pressedItemKey,o=t.visibleOrder,i=[],n=e[r];return n&&O.handleStyle({styles:i,orderObject:n}),o&&0<o.length&&o.forEach(function(e){e.key!==r&&O.handleStyle({styles:i,orderObject:e})}),i}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"renderItem",function(e){var t=e.key,r=e.data,o=e.style,i=O.props,n=i.fixedWidthAll,a=i.fixedHeightAll,_=i.transitionDuration,s=i.transitionTimingFunction,l=i.transitionDelay,d=i.shadowMultiple,u=i.shadowHRatio,c=i.shadowVRatio,p=i.shadowBlur,f=i.shadowBlurRatio,m=i.shadowSpread,h=i.shadowSpreadRatio,y=i.shadowColor,E=i.GridItemStyles;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_GridItem__WEBPACK_IMPORTED_MODULE_2__.a,{key:"rvdl-list-item-".concat(t),style:o,data:r,fixedWidthAll:n,fixedHeightAll:a,transitionDuration:_,transitionTimingFunction:s,transitionDelay:l,shadowMultiple:d,shadowHRatio:u,shadowVRatio:c,shadowBlur:p,shadowBlurRatio:f,shadowSpread:m,shadowSpreadRatio:h,shadowColor:y,GridItemStyles:E,handleMouseDown:O.handleMouseDown,handleTouchStart:O.handleTouchStart,onDragStart:_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_7__.a,__source:{fileName:_jsxFileName,lineNumber:490}})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(O)),"renderList",function(e){var t=O.props,r=t.order,o=t.fixedWidthAll,i=t.fixedHeightAll,n=t.gutterX,a=t.gutterY,_=t.transitionDuration,s=t.transitionTimingFunction,l=t.transitionDelay,d=t.GridStyles,u="".concat(_," ").concat(s," ").concat(l),c="width ".concat(u,",\n    height ").concat(u),p=Object(_Functions_findMaxPosition__WEBPACK_IMPORTED_MODULE_6__.a)({order:r,fixedWidthAll:o,fixedHeightAll:i,gutterX:n,gutterY:a}),f=p.maxRight,m=p.maxBottom;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"rvdl-grid",ref:O.gridRef,style:_objectSpread({overflowX:"auto",overflowY:"auto",background:"transparent",width:"100%",height:"100%",margin:0,padding:0},d,{position:"absolute",userSelect:"none",MozUserSelect:"none"}),onScroll:O.handleScroll,onDragStart:_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_7__.a,__source:{fileName:_jsxFileName,lineNumber:545}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul",{style:_objectSpread({width:f,height:m,margin:0,padding:0},d,{position:"absolute",userSelect:"none",MozUserSelect:"none",MozTransition:c,WebkitTransition:c,msTransition:c,transition:c,WebkitBackfaceVisibility:"hidden",MozBackfaceVisibility:"hidden",backfaceVisibility:"hidden",WebkitPerspective:1e3,MozPerspective:1e3,perspective:1e3}),onDragStart:_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_7__.a,__source:{fileName:_jsxFileName,lineNumber:564}},0<e.length&&e.map(O.renderItem)))}),O.gridRef=react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef(),O.updatingOrder=!1,O.updateTime=null,O.prevMouseX=-1,O.prevMouseY=-1,O.state={visibleOrder:[],containerWidth:-1,containerHeight:-1,scrollLeft:-1,scrollTop:-1,prevScrollLeft:-1,prevScrollTop:-1,isPressed:!1,pressedItemKey:"",prevPressedItemKey:"",leftDeltaX:-1,topDeltaY:-1,mouseX:-1,mouseY:-1},O}return _inherits(Grid,_React$Component),_createClass(Grid,[{key:"componentDidMount",value:function(){window.addEventListener("mousemove",this.handleMouseMove),window.addEventListener("touchmove",this.handleTouchMove,!1),window.addEventListener("mouseup",this.handleMouseUp),window.addEventListener("touchend",this.handleTouchEnd,!1),window.addEventListener("resize",this.updateGridSize),this.updateGridSize()}},{key:"componentDidUpdate",value:function(e,t){var r=this.props.itemsBool,o=this.state,i=o.containerWidth,n=o.containerHeight,a=o.prevScrollLeft,_=o.prevScrollTop;this.updateGridSize(),(r||i!==t.containerWidth||n!==t.containerHeight||a!==t.prevScrollLeft||_!==t.prevScrollTop)&&(r&&this.props.handleItemsBool(),this.handleUpdate())}},{key:"componentWillUnmount",value:function(){window.removeEventListener("mousemove",this.handleMouseMove),window.removeEventListener("touchmove",this.handleTouchMove),window.removeEventListener("mouseup",this.handleMouseUp),window.removeEventListener("touchend",this.handleTouchEnd),window.removeEventListener("resize",this.updateGridSize)}},{key:"render",value:function(){var e=this.generateStyles();return this.renderList(e)}},{key:"__reactstandin__regenerateByEval",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}]),Grid}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);Grid.propTypes={items:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired,order:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired,keys:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,itemsBool:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool.isRequired,gutterX:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,gutterY:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,fixedRows:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool.isRequired,fixedColumns:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool.isRequired,fixedWidthAll:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,fixedHeightAll:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,onlyDragElements:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired,onlyDragIds:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired,noDragElements:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired,noDragIds:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired,mouseUpdateTime:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,mouseUpdateX:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,mouseUpdateY:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,leeway:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,scrollBufferX:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,scrollBufferY:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,scrollUpdateX:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,scrollUpdateY:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,transitionDuration:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,transitionTimingFunction:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,transitionDelay:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,shadowMultiple:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowHRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowVRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowBlur:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowBlurRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowSpread:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowSpreadRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowColor:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,GridStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,GridItemStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,handleItemsBool:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,updateOrderKeys:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,updateItems:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,getVisibleItems:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func},Grid.defaultProps={fixedWidthAll:null,fixedHeightAll:null,shadowBlur:null,shadowSpread:null,getVisibleItems:null};var _default=Grid,co,eo;__webpack_exports__.a=_default,co=__webpack_require__("./node_modules/react-hot-loader/index.js").default,eo=__webpack_require__("./node_modules/react-hot-loader/index.js").leaveModule,co&&(co.register(Grid,"Grid","/home/tyler/Projects/react-virtual-draggable-grid/src/Grid.jsx"),co.register(_default,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Grid.jsx"),eo(module))}).call(this,__webpack_require__("./node_modules/webpack/buildin/harmony-module.js")(module))},"../src/GridItem.jsx":function(module,__webpack_exports__,__webpack_require__){"use strict";(function(module){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__),_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../src/Utilities/preventDrag.js"),_jsxFileName="/home/tyler/Projects/react-virtual-draggable-grid/src/GridItem.jsx",fo;function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _extends(){return(_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e}).apply(this,arguments)}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _possibleConstructorReturn(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?_assertThisInitialized(e):t}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}fo=__webpack_require__("./node_modules/react-hot-loader/index.js").enterModule,fo&&fo(module);var GridItem=function(_React$Component){function GridItem(){return _classCallCheck(this,GridItem),_possibleConstructorReturn(this,_getPrototypeOf(GridItem).apply(this,arguments))}return _inherits(GridItem,_React$Component),_createClass(GridItem,[{key:"shouldComponentUpdate",value:function(e){var t=this.props.style,r=t.isPressed,o=t.wasPressed,i=t.width,n=t.height,a=t.x,_=t.y,s=e.style;return r!==s.isPressed||(o!==s.wasPressed||(i!==s.width||(n!==s.height||(a!==s.x||(_!==s.y||this.props.data.itemsBool!==e.data.itemsBool)))))}},{key:"render",value:function(){var e=this.props,t=e.style,r=e.data,o=e.transitionDuration,i=e.transitionTimingFunction,n=e.transitionDelay,a=e.shadowMultiple,_=e.shadowHRatio,s=e.shadowVRatio,l=e.shadowBlur,d=e.shadowBlurRatio,u=e.shadowSpread,c=e.shadowSpreadRatio,p=e.shadowColor,f=e.GridItemStyles,m=e.handleMouseDown,h=e.handleTouchStart,y=t.isPressed,E=t.wasPressed,g=t.width,b=t.height,P=t.x,O=t.y,D=r.item,M=D.key,v=D.ItemComponent,x=D.itemProps,I="".concat(o," ").concat(i," ").concat(n),j="box-shadow ".concat(I,",\n    width ").concat(I,",\n    height ").concat(I),w=y?j:"transform ".concat(I,",\n      ").concat(j),C=y?99:E?98:1,T=y?a:0,R="".concat(T*_,"px\n    ").concat(T*s,"px\n    ").concat("number"==typeof l?l:T*d,"px\n    ").concat("number"==typeof u?u:T*c,"px\n    ").concat(p),A="translate3d(".concat(P,"px, ").concat(O,"px, 0)");return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li",{id:M,className:"rvdl-grid-item","data-x":P,"data-y":O,style:_objectSpread({overflowX:"hidden",overflowY:"hidden",userSelect:"none",MozUserSelect:"none",boxSizing:"border-box",margin:0,padding:0,background:"transparent"},f,{position:"absolute",width:g,height:b,MozTransition:w,WebkitTransition:w,msTransition:w,transition:w,zIndex:C,boxShadow:R,WebkitTransform:A,MozTransform:A,msTransform:A,transform:A,willChange:"transform",WebkitBackfaceVisibility:"hidden",MozBackfaceVisibility:"hidden",backfaceVisibility:"hidden",WebkitPerspective:1e3,MozPerspective:1e3,perspective:1e3}),onMouseDown:m,onTouchStart:h,onDragStart:_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_2__.a,__source:{fileName:_jsxFileName,lineNumber:93}},D&&v&&react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(v,_extends({},x,{__source:{fileName:_jsxFileName,lineNumber:133}})))}},{key:"__reactstandin__regenerateByEval",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}]),GridItem}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);GridItem.propTypes={style:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({x:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,y:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number}).isRequired,data:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.shape({item:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,isPressed:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,wasPressed:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,width:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,height:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number}).isRequired,fixedWidthAll:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,fixedHeightAll:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,transitionDuration:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,transitionTimingFunction:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,transitionDelay:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,shadowMultiple:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowHRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowVRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowBlur:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowBlurRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowSpread:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowSpreadRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,shadowColor:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,GridItemStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,handleMouseDown:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,handleTouchStart:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired},GridItem.defaultProps={fixedWidthAll:null,fixedHeightAll:null,transitionDelay:"",shadowBlur:null,shadowSpread:null};var _default=GridItem,Np,Op;__webpack_exports__.a=_default,Np=__webpack_require__("./node_modules/react-hot-loader/index.js").default,Op=__webpack_require__("./node_modules/react-hot-loader/index.js").leaveModule,Np&&(Np.register(GridItem,"GridItem","/home/tyler/Projects/react-virtual-draggable-grid/src/GridItem.jsx"),Np.register(_default,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/GridItem.jsx"),Op(module))}).call(this,__webpack_require__("./node_modules/webpack/buildin/harmony-module.js")(module))},"../src/Utilities/preventDrag.js":function(e,a,_){"use strict";(function(e){var t;(t=_("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var r,o,i=function(e){return e.preventDefault(),!1},n=i;a.a=n,r=_("./node_modules/react-hot-loader/index.js").default,o=_("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(i,"preventDrag","/home/tyler/Projects/react-virtual-draggable-grid/src/Utilities/preventDrag.js"),r.register(n,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/Utilities/preventDrag.js"),o(e))}).call(this,_("./node_modules/webpack/buildin/harmony-module.js")(e))},"../src/VirtualDraggableGrid.jsx":function(module,__webpack_exports__,__webpack_require__){"use strict";(function(module){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__),_Grid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../src/Grid.jsx"),_Functions_handleOrder__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../src/Functions/handleOrder.js"),_Functions_testItemsUpdate__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../src/Functions/testItemsUpdate.js"),_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../src/Utilities/preventDrag.js"),_jsxFileName="/home/tyler/Projects/react-virtual-draggable-grid/src/VirtualDraggableGrid.jsx",$p;function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _possibleConstructorReturn(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?_assertThisInitialized(e):t}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}$p=__webpack_require__("./node_modules/react-hot-loader/index.js").enterModule,$p&&$p(module);var VirtualDraggableGrid=function(_React$Component){function VirtualDraggableGrid(e){var o;_classCallCheck(this,VirtualDraggableGrid),_defineProperty(_assertThisInitialized(_assertThisInitialized(o=_possibleConstructorReturn(this,_getPrototypeOf(VirtualDraggableGrid).call(this,e)))),"handleItemsBool",function(){o.setState({itemsBool:!1})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(o)),"updateOrderKeys",function(e){var t=e.order,r=e.keys;o.setState({order:t,keys:r})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(o)),"updateItems",function(){var e=o.props,_=e.items,t=e.getItems,r=o.state.order,s=[];r.forEach(function(e,n){var a=e.length;e.forEach(function(e,t){var r=e.itemX,o=e.itemY,i=Array.isArray(_[o])?_[o][r]:_[o];1===a?s[n]=i:(s[n]||(s[n]=[]),s[n][t]=i)})}),"function"==typeof t&&t(s)});var t=o.props,r=t.items,i=t.fixedRows,n=t.fixedColumns,a=t.fixedWidthAll,_=t.fixedHeightAll,s=t.gutterX,l=t.gutterY,d=t.leeway,u=t.scrollBufferX,c=t.scrollBufferY,p=[],f={};if(r&&Array.isArray(r)&&0<r.length){var m=Object(_Functions_handleOrder__WEBPACK_IMPORTED_MODULE_3__.a)({items:r,fixedRows:i,fixedColumns:n,fixedWidthAll:a,fixedHeightAll:_,gutterX:s,gutterY:l});p=m.order,f=m.keys}return o.state={order:p,keys:f,itemsBool:!0,fixedRows:i,fixedColumns:n,fixedWidthAll:a,fixedHeightAll:_,gutterX:s,gutterY:l,leeway:d,scrollBufferX:u,scrollBufferY:c},o}return _inherits(VirtualDraggableGrid,_React$Component),_createClass(VirtualDraggableGrid,[{key:"render",value:function(){var e=this.props.items;if(e&&Array.isArray(e)&&0<e.length){var t=this.props,r=t.WrapperStyles,o=t.fixedRows,i=t.fixedColumns,n=t.fixedWidthAll,a=t.fixedHeightAll,_=t.onlyDragElements,s=t.onlyDragIds,l=t.noDragElements,d=t.noDragIds,u=t.gutterX,c=t.gutterY,p=t.mouseUpdateTime,f=t.mouseUpdateX,m=t.mouseUpdateY,h=t.leeway,y=t.scrollBufferX,E=t.scrollBufferY,g=t.scrollUpdateX,b=t.scrollUpdateY,P=t.transitionDuration,O=t.transitionTimingFunction,D=t.transitionDelay,M=t.shadowMultiple,v=t.shadowHRatio,x=t.shadowVRatio,I=t.shadowBlur,j=t.shadowBlurRatio,w=t.shadowSpread,C=t.shadowSpreadRatio,T=t.shadowColor,R=t.GridStyles,A=t.GridItemStyles,B=t.getVisibleItems,W=this.state,U=W.order,L=W.keys,k=W.itemsBool;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"rvdl-wrapper",style:_objectSpread({height:"100%",width:"100%",margin:0,padding:0},r,{display:"block",position:"relative",userSelect:"none",MozUserSelect:"none",boxSizing:"border-box"}),onDragStart:_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_5__.a,__source:{fileName:_jsxFileName,lineNumber:224}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Grid__WEBPACK_IMPORTED_MODULE_2__.a,{items:e,order:U,keys:L,itemsBool:k,fixedRows:o,fixedColumns:i,fixedWidthAll:n,fixedHeightAll:a,onlyDragElements:_,onlyDragIds:s,noDragElements:l,noDragIds:d,gutterX:u,gutterY:c,mouseUpdateTime:p,mouseUpdateX:f,mouseUpdateY:m,leeway:h,scrollBufferX:y,scrollBufferY:E,scrollUpdateX:g,scrollUpdateY:b,transitionDuration:P,transitionTimingFunction:O,transitionDelay:D,shadowMultiple:M,shadowHRatio:v,shadowVRatio:x,shadowBlur:I,shadowBlurRatio:j,shadowSpread:w,shadowSpreadRatio:C,shadowColor:T,GridStyles:R,GridItemStyles:A,handleItemsBool:this.handleItemsBool,updateOrderKeys:this.updateOrderKeys,updateItems:this.updateItems,getVisibleItems:B,onDragStart:_Utilities_preventDrag__WEBPACK_IMPORTED_MODULE_5__.a,__source:{fileName:_jsxFileName,lineNumber:240}}))}return null}},{key:"__reactstandin__regenerateByEval",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}],[{key:"getDerivedStateFromProps",value:function(e,t){var r=e.items,o=e.fixedRows,i=e.fixedColumns,n=e.fixedWidthAll,a=e.fixedHeightAll,_=e.gutterX,s=e.gutterY,l=e.leeway,d=e.scrollBufferX,u=e.scrollBufferY,c=t.order,p=t.keys,f={};return o!==t.fixedRows&&(f.fixedRows=o),i!==t.fixedColumns&&(f.fixedColumns=i),n!==t.fixedWidthAll&&(f.fixedWidthAll=n),a!==t.fixedHeightAll&&(f.fixedHeightAll=a),_!==t.gutterX&&(f.gutterX=_),s!==t.gutterY&&(f.gutterY=s),l!==t.leeway&&(f.leeway=l),d!==t.scrollBufferX&&(f.scrollBufferX=d),u!==t.scrollBufferY&&(f.scrollBufferY=u),0<Object.keys(f).length||r&&Array.isArray(r)&&0<r.length&&Object(_Functions_testItemsUpdate__WEBPACK_IMPORTED_MODULE_4__.a)({items:r,order:c,keys:p,fixedWidthAll:n,fixedHeightAll:a})?(f.itemsBool=!0,_objectSpread({},f,Object(_Functions_handleOrder__WEBPACK_IMPORTED_MODULE_3__.a)({items:r,fixedRows:o,fixedColumns:i,fixedWidthAll:n,fixedHeightAll:a,gutterX:_,gutterY:s}))):null}}]),VirtualDraggableGrid}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);VirtualDraggableGrid.propTypes={items:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,gutterX:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,gutterY:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,fixedRows:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,fixedColumns:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,fixedWidthAll:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,fixedHeightAll:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,onlyDragElements:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,onlyDragIds:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,noDragElements:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,noDragIds:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array,mouseUpdateTime:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,mouseUpdateX:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,mouseUpdateY:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,leeway:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,scrollBufferX:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,scrollBufferY:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,scrollUpdateX:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,scrollUpdateY:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,transitionDuration:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,transitionTimingFunction:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,transitionDelay:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,shadowMultiple:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowHRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowVRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowBlur:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowBlurRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowSpread:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowSpreadRatio:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,shadowColor:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,WrapperStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,GridStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,GridItemStyles:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,getItems:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,getVisibleItems:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func},VirtualDraggableGrid.defaultProps={items:[],fixedRows:!1,fixedColumns:!1,fixedWidthAll:null,fixedHeightAll:null,onlyDragElements:[],onlyDragIds:[],noDragElements:[],noDragIds:[],gutterX:0,gutterY:0,mouseUpdateTime:100,mouseUpdateX:50,mouseUpdateY:50,leeway:.1,scrollBufferX:100,scrollBufferY:100,scrollUpdateX:100,scrollUpdateY:100,transitionDuration:"0.3s",transitionTimingFunction:"ease",transitionDelay:"0.2s",shadowMultiple:16,shadowHRatio:1,shadowVRatio:1,shadowBlur:null,shadowBlurRatio:1.2,shadowSpread:null,shadowSpreadRatio:0,shadowColor:"rgba(0, 0, 0, 0.2)",WrapperStyles:{},GridStyles:{},GridItemStyles:{},getItems:null,getVisibleItems:null};var _default=VirtualDraggableGrid,qs,rs;__webpack_exports__.a=_default,qs=__webpack_require__("./node_modules/react-hot-loader/index.js").default,rs=__webpack_require__("./node_modules/react-hot-loader/index.js").leaveModule,qs&&(qs.register(VirtualDraggableGrid,"VirtualDraggableGrid","/home/tyler/Projects/react-virtual-draggable-grid/src/VirtualDraggableGrid.jsx"),qs.register(_default,"default","/home/tyler/Projects/react-virtual-draggable-grid/src/VirtualDraggableGrid.jsx"),rs(module))}).call(this,__webpack_require__("./node_modules/webpack/buildin/harmony-module.js")(module))},"./index.jsx":function(e,t,c){"use strict";c.r(t),function(e){var t,r=c("./node_modules/react/index.js"),o=c.n(r),i=c("./node_modules/react-dom/index.js"),n=c.n(i),a=c("./node_modules/react-hot-loader/index.js"),_=c("./src/Demo.jsx"),s="/home/tyler/Projects/react-virtual-draggable-grid/demo/index.jsx";(t=c("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var l,d,u=function(e){n.a.render(o.a.createElement(a.AppContainer,{__source:{fileName:s,lineNumber:9}},o.a.createElement(e,{__source:{fileName:s,lineNumber:10}})),document.getElementById("root"))};e.hot.accept("./src/Demo.jsx",function(e){_=c("./src/Demo.jsx"),u(_.default)}),u(_.default),l=c("./node_modules/react-hot-loader/index.js").default,d=c("./node_modules/react-hot-loader/index.js").leaveModule,l&&(l.register(u,"render","/home/tyler/Projects/react-virtual-draggable-grid/demo/index.jsx"),d(e))}.call(this,c("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/Checkbox.jsx":function(e,u,c){"use strict";(function(e){var t,r=c("./node_modules/react/index.js"),n=c.n(r),o=c("./node_modules/prop-types/index.js"),i=c.n(o),a="/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Checkbox.jsx";(t=c("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var _=function(e){var t=e.id,r=e.label,o=e.checked,i=e.onChange;return n.a.createElement("div",{style:{display:"flex",flexWrap:"nowrap",margin:"".concat(5,"px 0 0 0"),fontFamily:["Titillium Web","sans-serif"],fontSize:16},__source:{fileName:a,lineNumber:12}},n.a.createElement("label",{style:{display:"block",position:"relative",height:15,width:15,margin:"0.25em ".concat(10,"px 0 0"),padding:"1px 0 0 1px",border:"1px solid #ccc"},htmlFor:t,__source:{fileName:a,lineNumber:21}},n.a.createElement("input",{id:t,style:{display:"block",position:"absolute",height:14,width:14,margin:0,background:o?"#ccc":"transparent",appearance:"none",MozAppearance:"none",WebkitAppearance:"none"},type:"checkbox",checked:o,onChange:i,__source:{fileName:a,lineNumber:33}})),r)};_.propTypes={id:i.a.string.isRequired,label:i.a.string.isRequired,checked:i.a.bool.isRequired,onChange:i.a.func.isRequired};var s,l,d=_;u.a=d,s=c("./node_modules/react-hot-loader/index.js").default,l=c("./node_modules/react-hot-loader/index.js").leaveModule,s&&(s.register(_,"Checkbox","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Checkbox.jsx"),s.register(d,"default","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Checkbox.jsx"),l(e))}).call(this,c("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/Demo.jsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),webfontloader__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/webfontloader/webfontloader.js"),webfontloader__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(webfontloader__WEBPACK_IMPORTED_MODULE_1__),_DemoItemComponent__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/DemoItemComponent.jsx"),_Checkbox__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Checkbox.jsx"),_Input__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/Input.jsx"),_src_VirtualDraggableGrid__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../src/VirtualDraggableGrid.jsx"),_jsxFileName="/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Demo.jsx",ft;function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _possibleConstructorReturn(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?_assertThisInitialized(e):t}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}ft=__webpack_require__("./node_modules/react-hot-loader/index.js").enterModule,ft&&ft(module);var colorArray=["#1b85b8","#559e83","#ae5a41","#7bb3ff","#83adb5","#5e3c58","#2e4045","#aa6f73","#eea990","#295f48","#0c457d","#80bf80","#a3709a"],rand=function(e){return Math.floor(Math.random()*e)},Demo=function(_React$Component){function Demo(e){var s;_classCallCheck(this,Demo),_defineProperty(_assertThisInitialized(_assertThisInitialized(s=_possibleConstructorReturn(this,_getPrototypeOf(Demo).call(this,e)))),"itemObject",function(){var e=s.state,t=e.fixedWidthAll,r=e.fixedHeightAll;s.count+=1;var o=s.count%2==0?t:t+50,i=s.count%2==0?r:r+50;return{key:"item-".concat(s.count),ItemComponent:_DemoItemComponent__WEBPACK_IMPORTED_MODULE_2__.a,itemProps:{name:"Item-".concat(s.count),imageNumber:rand(1e3),color:colorArray[rand(colorArray.length)],width:o,height:i},fixedWidth:o,fixedHeight:i}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"generateItems",function(e){var t=e.x,r=e.y,o=[];if(0<t&&0<r)for(var i=0;i<r;i+=1){var n=[];o.push(n);for(var a=0;a<t;a+=1){var _=s.itemObject();n.push(_)}}return o}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"updateItems",function(e){var t=s.state,r=t.x,o=t.y;if(r!==e.x||o!==e.y){s.count=0;var i=s.generateItems({x:r,y:o});s.setState({items:i})}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"addItem",function(){var e=s.state.items,t=[s.itemObject()].concat(_toConsumableArray(e[0]));e[0]=t,s.setState({items:e})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"removeItem",function(){var e=s.state.items,t=_toConsumableArray(e[0]);e[0]=t.slice(1),s.setState({items:e})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"getItems",function(e){s.setState({items:e})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"getVisibleItems",function(e){console.log(e.length)}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"toggleCheckbox",function(e){if(e&&e.target){var t=e.target.id;t&&s.setState(function(e){return _defineProperty({},t,!e[t])})}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"handleInput",function(e){if(e&&e.target){var t=e.target.id;if(t){var r=e.target.value;if(r.replace(/[^A-Za-z0-9.]/g,""),/\./g.test(r))s.setState(_defineProperty({},t,r));else if(-1<["x","y","fixedWidthAll","fixedHeightAll","gutterX","gutterY","leeway","scrollBufferX","scrollBufferY"].indexOf(t)){var o=Number(r);!Number.isNaN(o)&&("x"!==t||o<=100)&&("y"!==t||o<=100)&&s.setState(_defineProperty({},t,o))}else s.setState(_defineProperty({},t,r))}}}),_defineProperty(_assertThisInitialized(_assertThisInitialized(s)),"convertToArray",function(e){return e.replace(/\s/g,"").split(",").filter(function(e){return e})}),webfontloader__WEBPACK_IMPORTED_MODULE_1___default.a.load({google:{families:["Titillium Web"]}}),s.count=0;s.state={items:[],x:11,y:11,fixedWidthAll:250,fixedHeightAll:325,gutterX:20,gutterY:20,leeway:.1,scrollBufferX:500,scrollBufferY:500,onlyDragElements:"",noDragElements:"button, a",fixedRows:!1,fixedColumns:!1,fixedWidthAllBool:!1,fixedHeightAllBool:!1};var t=s.generateItems({x:11,y:11});return s.state.items=t,s}return _inherits(Demo,_React$Component),_createClass(Demo,[{key:"componentDidUpdate",value:function(e,t){this.updateItems(t)}},{key:"render",value:function(){var e=this.state,t=e.x,r=e.y,o=e.fixedWidthAll,i=e.fixedHeightAll,n=e.gutterX,a=e.gutterY,_=e.leeway,s=e.scrollBufferX,l=e.scrollBufferY,d=e.onlyDragElements,u=e.noDragElements,c=e.fixedRows,p=e.fixedColumns,f=e.fixedWidthAllBool,m=e.fixedHeightAllBool;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{width:"calc(".concat("100%"," - ").concat(40,"px"),height:"calc(".concat("100%"," - ").concat(40,"px"),margin:20,fontFamily:["Titillium Web","sans-serif"]},__source:{fileName:_jsxFileName,lineNumber:220}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("h1",{style:{marginTop:0,marginBottom:20},__source:{fileName:_jsxFileName,lineNumber:228}},"react-virtual-draggable-grid"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{display:"flex",flexWrap:"wrap",justifyContent:"flex-start",alignItems:"flex-start"},__source:{fileName:_jsxFileName,lineNumber:229}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{flex:"0 0 auto",marginRight:20},__source:{fileName:_jsxFileName,lineNumber:237}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"x",label:"Number of Rows (max: 100)",value:t,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:238}}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"y",label:"Number of Columns (max: 100)",value:r,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:239}})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{flex:"0 0 auto",marginRight:20},__source:{fileName:_jsxFileName,lineNumber:246}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"fixedWidthAll",label:"Fixed Width All",value:o,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:247}}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"fixedHeightAll",label:"Fixed Height All",value:i,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:253}})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{flex:"0 0 auto",marginRight:20},__source:{fileName:_jsxFileName,lineNumber:260}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"gutterX",label:"Gutter X",value:n,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:261}}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"gutterY",label:"Gutter Y",value:a,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:262}})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{flex:"0 0 auto",marginRight:20},__source:{fileName:_jsxFileName,lineNumber:264}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"leeway",label:"Leeway",value:_,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:265}}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"scrollBufferX",label:"Scroll Buffer X",value:s,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:266}}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"scrollBufferY",label:"Scroll Buffer Y",value:l,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:272}})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{flex:"0 0 auto",marginRight:20},__source:{fileName:_jsxFileName,lineNumber:279}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"onlyDragElements",label:"Only Drag Elements",value:d,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:280}}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Input__WEBPACK_IMPORTED_MODULE_4__.a,{id:"noDragElements",label:"No Drag Elements",value:u,onChange:this.handleInput,__source:{fileName:_jsxFileName,lineNumber:286}}))),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:294}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{flex:"0 0 auto",marginRight:20},__source:{fileName:_jsxFileName,lineNumber:295}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Checkbox__WEBPACK_IMPORTED_MODULE_3__.a,{id:"fixedRows",label:"Fixed Rows",checked:c,onChange:this.toggleCheckbox,__source:{fileName:_jsxFileName,lineNumber:296}}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Checkbox__WEBPACK_IMPORTED_MODULE_3__.a,{id:"fixedColumns",label:"Fixed Columns",checked:p,onChange:this.toggleCheckbox,__source:{fileName:_jsxFileName,lineNumber:302}})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{flex:"0 0 auto",marginRight:20},__source:{fileName:_jsxFileName,lineNumber:309}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Checkbox__WEBPACK_IMPORTED_MODULE_3__.a,{id:"fixedWidthAllBool",label:"Fixed Width All",checked:f,onChange:this.toggleCheckbox,__source:{fileName:_jsxFileName,lineNumber:310}}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Checkbox__WEBPACK_IMPORTED_MODULE_3__.a,{id:"fixedHeightAllBool",label:"Fixed Height All",checked:m,onChange:this.toggleCheckbox,__source:{fileName:_jsxFileName,lineNumber:316}}))),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{__source:{fileName:_jsxFileName,lineNumber:324}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button",{type:"button",style:{curser:"pointer",width:100,height:50,margin:20,marginLeft:0,boxShadow:"none",border:0,background:"#ccc",fontFamily:["Titillium Web","sans-serif"],fontSize:16},onClick:this.addItem,__source:{fileName:_jsxFileName,lineNumber:325}},"Add"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button",{type:"button",style:{curser:"pointer",width:100,height:50,margin:20,marginLeft:0,boxShadow:"none",border:0,background:"#ccc",fontFamily:["Titillium Web","sans-serif"],fontSize:16},onClick:this.removeItem,__source:{fileName:_jsxFileName,lineNumber:343}},"Delete")),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_src_VirtualDraggableGrid__WEBPACK_IMPORTED_MODULE_5__.a,{items:this.state.items,fixedRows:c,fixedColumns:p,fixedWidthAll:f?o:null,fixedHeightAll:m?i:null,gutterX:n,gutterY:a,leeway:_,scrollBufferX:s,scrollBufferY:l,onlyDragElements:this.convertToArray(d),noDragElements:this.convertToArray(u),getItems:this.getItems,__source:{fileName:_jsxFileName,lineNumber:362}}))}},{key:"__reactstandin__regenerateByEval",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}]),Demo}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component),_default=Demo,$u,_u;__webpack_exports__.default=_default,$u=__webpack_require__("./node_modules/react-hot-loader/index.js").default,_u=__webpack_require__("./node_modules/react-hot-loader/index.js").leaveModule,$u&&($u.register(colorArray,"colorArray","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Demo.jsx"),$u.register(rand,"rand","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Demo.jsx"),$u.register(Demo,"Demo","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Demo.jsx"),$u.register(_default,"default","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Demo.jsx"),_u(module))}.call(this,__webpack_require__("./node_modules/webpack/buildin/harmony-module.js")(module))},"./src/DemoItemComponent.jsx":function(module,__webpack_exports__,__webpack_require__){"use strict";(function(module){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__),halogenium__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/halogenium/lib/Halogenium.js"),halogenium__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(halogenium__WEBPACK_IMPORTED_MODULE_2__),_jsxFileName="/home/tyler/Projects/react-virtual-draggable-grid/demo/src/DemoItemComponent.jsx",av;function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _possibleConstructorReturn(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?_assertThisInitialized(e):t}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}av=__webpack_require__("./node_modules/react-hot-loader/index.js").enterModule,av&&av(module);var DemoItemComponent=function(_React$Component){function DemoItemComponent(e){var t;return _classCallCheck(this,DemoItemComponent),_defineProperty(_assertThisInitialized(_assertThisInitialized(t=_possibleConstructorReturn(this,_getPrototypeOf(DemoItemComponent).call(this,e)))),"handleImageLoaded",function(){t.setState({imageLoaded:!0})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(t)),"handleImageError",function(){t.setState(function(e){return{imageNumber:e.imageNumber-1}})}),_defineProperty(_assertThisInitialized(_assertThisInitialized(t)),"handleButtonClick",function(){return console.log("Clicked without initiating drag",t.props.name,".")}),t.state={imageLoaded:!1,imageNumber:t.props.imageNumber},t}return _inherits(DemoItemComponent,_React$Component),_createClass(DemoItemComponent,[{key:"render",value:function(){var e=this.props,t=e.styles,r=e.width,o=e.height,i=e.name,n=e.color,a=this.state,_=a.imageLoaded,s=a.imageNumber,l=o-Math.ceil(48)-80;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:_objectSpread({display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",alignText:"center",userSelect:"none",cursor:"move",width:"auto",height:"auto",background:"white"},t),__source:{fileName:_jsxFileName,lineNumber:37}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("img",{src:"https://picsum.photos/".concat(r,"/").concat(l,"?image=").concat(s),alt:"",onLoad:this.handleImageLoaded,onError:this.handleImageError,style:{display:_?"block":"none",width:r,height:l,background:"transparent"},__source:{fileName:_jsxFileName,lineNumber:52}}),!_&&react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",width:r,height:l},__source:{fileName:_jsxFileName,lineNumber:65}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(halogenium__WEBPACK_IMPORTED_MODULE_2__.ClipLoader,{color:n,size:"".concat(30,"px"),__source:{fileName:_jsxFileName,lineNumber:74}})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a",{id:"test-test",href:"http://localhost:8080",style:{justifyContent:"center",textAlign:"center",boxSizing:"border-box",marginTop:20,marginBottom:20,color:n,fontFamily:["Titillium Web","sans-serif"],fontSize:16},__source:{fileName:_jsxFileName,lineNumber:77}},"Link: ".concat(i)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button",{type:"button",style:{cursor:"pointer",boxSizing:"border-box",width:r,padding:20,color:"white",boxShadow:"none",border:0,background:n,fontFamily:["Titillium Web","sans-serif"],fontSize:16},onClick:this.handleButtonClick,__source:{fileName:_jsxFileName,lineNumber:93}},"Button: ".concat(i)))}},{key:"__reactstandin__regenerateByEval",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}]),DemoItemComponent}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);DemoItemComponent.propTypes={styles:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,width:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,height:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,name:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,imageNumber:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,color:prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired},DemoItemComponent.defaultProps={styles:{}};var _default=DemoItemComponent,aw,bw;__webpack_exports__.a=_default,aw=__webpack_require__("./node_modules/react-hot-loader/index.js").default,bw=__webpack_require__("./node_modules/react-hot-loader/index.js").leaveModule,aw&&(aw.register(DemoItemComponent,"DemoItemComponent","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/DemoItemComponent.jsx"),aw.register(_default,"default","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/DemoItemComponent.jsx"),bw(module))}).call(this,__webpack_require__("./node_modules/webpack/buildin/harmony-module.js")(module))},"./src/Input.jsx":function(e,u,c){"use strict";(function(e){var t,r=c("./node_modules/react/index.js"),n=c.n(r),o=c("./node_modules/prop-types/index.js"),i=c.n(o),a="/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Input.jsx";(t=c("./node_modules/react-hot-loader/index.js").enterModule)&&t(e);var _=function(e){var t=e.id,r=e.label,o=e.value,i=e.onChange;return n.a.createElement("div",{style:{display:"flex",margin:"".concat(5,"px 0 0 0"),flexDirection:"column",fontFamily:["Titillium Web","sans-serif"],fontSize:16},__source:{fileName:a,lineNumber:12}},r,n.a.createElement("input",{style:{height:30,margin:"".concat(5,"px 0 0 0"),padding:"0 0 0 ".concat(5,"px"),boxShadow:"none",border:"1px solid #ccc",borderRadius:0},id:t,value:o,onChange:i,__source:{fileName:a,lineNumber:22}}))};_.propTypes={id:i.a.string.isRequired,label:i.a.string.isRequired,value:i.a.oneOfType([i.a.string.isRequired,i.a.number.isRequired]).isRequired,onChange:i.a.func.isRequired};var s,l,d=_;u.a=d,s=c("./node_modules/react-hot-loader/index.js").default,l=c("./node_modules/react-hot-loader/index.js").leaveModule,s&&(s.register(_,"Input","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Input.jsx"),s.register(d,"default","/home/tyler/Projects/react-virtual-draggable-grid/demo/src/Input.jsx"),l(e))}).call(this,c("./node_modules/webpack/buildin/harmony-module.js")(e))},0:function(e,t,r){e.exports=r("./index.jsx")}})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,